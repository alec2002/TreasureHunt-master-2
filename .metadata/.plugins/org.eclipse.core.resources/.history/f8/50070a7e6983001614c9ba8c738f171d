import java.applet.AudioClip;
import java.awt.AWTException;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.swing.JApplet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

public class UnlockChest extends JPanel implements MouseMotionListener,
		KeyListener, ActionListener {
	Rectangle surferBox;
	int gg = 1;
	boolean ttt = false;
	boolean lose = false;
	boolean isflash = false;
	int gamestate = 0;
	int endstate = 1;
	int currentstate = gamestate;
	long startt = -1;
	int mineb1 = 70;
	int mineb2 = 70;
	int move1 = 380;
	int move2 = 400;
	int minex = 100;
	int miney = 400;
	int seconds = 60;
	long timerCount = -1;
	int minew = 75;
	int mineh = 75;
	int num1 = 200;
	int num2 = 100;
	int one = 1;
	int i = 60;
	int minebob = 1;
	Rectangle jellyfishBox;
	Rectangle minebox;
	JFrame frame;
	JPanel panel;
	int score = 3;
	int score2 = 1;
	int backwidth = 600;
	int num = 1000 / 60;
	int backheight = 600;
	boolean visible = true;
	boolean showim = true;
	int box1 = 100;
	int box2 = 100;
	boolean mineb = true;
	BufferedImage backroundimage;

	BufferedImage backroundimage2;

	BufferedImage backroundimage3;

	BufferedImage backroundimage4;
	BufferedImage background5;
	ImagePanel surfboard;
	ImagePanel mine;
	jellyfish jf;
	jellyfish jf2;
	Random r = new Random();
	int mouseY;
	int mouseX;
	int x = 300;

	int y = 300;
	int mov = 1;
	Timer t;

	ImagePanel dd;
	ImagePanel end;
	private BufferedImage backroundimage5;

	public UnlockChest() {
		playSound("waves.wav");
		BufferedImage cursorImg = new BufferedImage(16, 16,
				BufferedImage.TYPE_INT_ARGB);

		Cursor blankCursor = Toolkit.getDefaultToolkit().createCustomCursor(
				cursorImg, new Point(0, 0), "blank cursor");

		dd = new ImagePanel("Unknown-1.jpeg", backwidth, backheight, 0, 0);
		mine = new ImagePanel("imgres.png", minew, mineh, minex, miney);
		end = new ImagePanel("lose.png", backwidth, backheight, 0, 0);
		surfboard = new ImagePanel("images.png", 100, 100, 200, 100);
		surferBox = new Rectangle(100, 100, num1, num2);
		frame = new JFrame();
		frame.setTitle("Dodge The JellyFish Round 1");
		frame.add(this);

		panel = new JPanel();
		try {

			backroundimage = ImageIO.read(getClass().getResource(
					"Unknown-1.jpeg"));

			backroundimage2 = ImageIO
					.read(getClass().getResource("images.png"));

			backroundimage3 = ImageIO.read(getClass().getResource("jelly.png"));

			backroundimage4 = ImageIO
					.read(getClass().getResource("imgres.png"));
			backroundimage5 = ImageIO.read(getClass().getResource("lose.png"));
		} catch (Exception e) {

			// TODO: handle exception

		}

		jf = new jellyfish(x, y, 100, 100, backroundimage3);
		jellyfishBox = new Rectangle(x, y, 100, 100);
		t = new Timer(num, this);

		try {

			new Robot().mouseMove(250, 300);

		} catch (AWTException e) {

			e.printStackTrace();

		}

		frame.setVisible(visible);

		frame.setSize(600, 600);

		frame.setDefaultCloseOperation(frame.EXIT_ON_CLOSE);

		frame.getContentPane().setCursor(blankCursor);

		frame.addMouseMotionListener(this);

		frame.addKeyListener(this);

		frame.setVisible(true);

		t.start();

	}

	public void paintComponent(Graphics g) {
		
		if (visible == true) {
			if (isflash == true) {

				if (startt == -1) {
					startt = System.currentTimeMillis();
				}
				if (System.currentTimeMillis() - startt >= 100) {
					showim = !showim;
					startt = System.currentTimeMillis();
				}
			}
			if (lose == true) {
				end.paint(g);
			} else {
				dd.paint(g);
			}
			jf.draw(g);
			if (showim == true) {
				mine.paint(g);
			}

			surfboard.paint(g);
		}
		g.drawRect(minex, miney, minew, mineh);
	}

	public void mouseDragged(MouseEvent e) {

		// TODO Auto-generated method stub

	}

	public void mouseMoved(MouseEvent e) {

		int mouseX = e.getX();

		int mouseY = e.getY();

		surfboard.setBounds(mouseX - 50, mouseY - 50, 100, 100);
		surferBox.setBounds(mouseX - 50, mouseY - 50, 100, 100);

	}

	@Override
	public void keyPressed(KeyEvent arg0) {

		if (arg0.getKeyCode() == KeyEvent.VK_SPACE) {

			playSound("splash.wav");

		}
		if (arg0.getKeyCode() == KeyEvent.VK_ESCAPE) {

			System.exit(0);

		}
		if (arg0.getKeyCode() == KeyEvent.VK_R) {
			seconds = 60;
			surfboard = new ImagePanel("images.png", 100, 100, 200, 100);
			jf = new jellyfish(x, y, 100, 100, backroundimage3);
			dd = new ImagePanel("Unknown-1.jpeg", backwidth, backheight, 0, 0);
			mine = new ImagePanel("imgres.png", minew, mineh, minex, miney);
			lose = false;
			currentstate = gamestate;
			ttt = false;
			t.start();

			

		}
	}

	@Override
	public void keyReleased(KeyEvent arg0) {

		// TODO Auto-generated method stub

	}

	@Override
	public void keyTyped(KeyEvent arg0) {

		// TODO Auto-generated method stub

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		jellyfishBox.setBounds(jf.x+20, jf.y, 50, 90);
		if (timerCount == -1) {
			timerCount = System.currentTimeMillis();
		}
		if (System.currentTimeMillis() - timerCount >= 1000) {
			seconds -= 1;
			frame.setTitle("           Dodge The JellyFish Round " + gg
					+ "                                               Timer- "
					+ seconds);
			timerCount = System.currentTimeMillis();
		}
		
		if (seconds == 32) {
			isflash = true;
		}
		if (seconds == 31) {
			isflash = false;
		}
		if (seconds == 30) {
			showim = false;
			mineb1 = 0;
			mineb2 = 0;
			minex = 300;
			miney = 200;
			move1 = 180;
			move2 = 200;
			showim = true;
			isflash = true;
		}
		if (seconds == 29) {
			isflash = false;
		}
		if (seconds == 0) {
			gg = 2;
			seconds = 60;
			seconds -= 1;

		}
		// make same stuff for paint component

		if (currentstate == gamestate) {
			updategamestate();
		} else if (currentstate == endstate) {
			updateendtate();
		}
	}

	public void updategamestate() {
		minebox = new Rectangle(minex, miney, minew, mineh);
		repaint();
		// moves thing1
		jf.update();
		mine.setBounds(minex, miney -= minebob, minew, mineh);

		if (miney < move1) {
			minebob = -1;
		}
		if (miney > move2) {
			minebob = +1;
		}
		
		
		 System.out.println(miney);
		 if (surferBox.intersects(jellyfishBox)) {
			 surfboard = new ImagePanel("images.png", 100, 100, 200, 200);
		 t.stop();
		 ttt = true;
		 lose = true;
		 currentstate = endstate;
		 int i = 0;
		 int j = 0;

		}
		if (surferBox.intersects(minebox)) {
			ttt = true;
			t.stop();
	
			playSound("exp.wav");
			

			lose = true;
			int i = 0;
			int j = 0;

		}
	}

	public void updateendtate() {

	}

	

	void playSound(String fileName) {
		AudioClip sound = JApplet
				.newAudioClip(getClass().getResource(fileName));
		sound.play();
	}

}
